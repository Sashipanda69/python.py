class ContactBook:
    def __init__(self):
        self.contacts = {}

    def add_contact(self):
        """
        Add a new contact to the contact book.

        :return: None
        """
        print("\nAdd Contact")
        print("-----------")
        name = input("Enter contact name: ")
        phone_number = input("Enter phone number: ")
        email = input("Enter email: ")
        address = input("Enter address: ")
        self.contacts[name] = {"phone_number": phone_number, "email": email, "address": address}
        print("Contact added successfully!")

    def view_contact_list(self):
        """
        Display a list of all contacts in the contact book.

        :return: None
        """
        print("\nContact List")
        print("------------")
        if not self.contacts:
            print("No contacts found!")
        else:
            for name, details in self.contacts.items():
                print(f"Name: {name}, Phone Number: {details['phone_number']}")

    def search_contact(self):
        """
        Search for a contact by name or phone number.

        :return: None
        """
        print("\nSearch Contact")
        print("-------------")
        search_term = input("Enter name or phone number to search: ")
        found = False
        for name, details in self.contacts.items():
            if search_term in [name, details["phone_number"]]:
                print(f"Name: {name}, Phone Number: {details['phone_number']}, Email: {details['email']}, Address: {details['address']}")
                found = True
                break
        if not found:
            print("Contact not found!")

    def update_contact(self):
        """
        Update an existing contact in the contact book.

        :return: None
        """
        print("\nUpdate Contact")
        print("-------------")
        name = input("Enter contact name to update: ")
        if name in self.contacts:
            print("Enter new details (press enter to keep current value):")
            phone_number = input(f"Phone Number ({self.contacts[name]['phone_number']}): ") or self.contacts[name]['phone_number']
            email = input(f"Email ({self.contacts[name]['email']}): ") or self.contacts[name]['email']
            address = input(f"Address ({self.contacts[name]['address']}): ") or self.contacts[name]['address']
            self.contacts[name] = {"phone_number": phone_number, "email": email, "address": address}
            print("Contact updated successfully!")
        else:
            print("Contact not found!")

    def delete_contact(self):
        """
        Delete a contact from the contact book.

        :return: None
        """
        print("\nDelete Contact")
        print("-------------")
        name = input("Enter contact name to delete: ")
        if name in self.contacts:
            del self.contacts[name]
            print("Contact deleted successfully!")
        else:
            print("Contact not found!")

    def run(self):
        """
        Run the contact book application.

        :return: None
        """
        while True:
            print("\nContact Book Menu:")
            print("1. Add Contact")
            print("2. View Contact List")
            print("3. Search Contact")
            print("4. Update Contact")
            print("5. Delete Contact")
            print("6. Exit")
            choice = input("Enter your choice: ")
            if choice == "1":
                self.add_contact()
            elif choice == "2":
                self.view_contact_list()
            elif choice == "3":
                self.search_contact()
            elif choice == "4":
                self.update_contact()
            elif choice == "5":
                self.delete_contact()
            elif choice == "6":
                break
            else:
                print("Invalid choice. Please try again.")


if __name__ == "__main__":
    contact_book = ContactBook()
    contact_book.run()
